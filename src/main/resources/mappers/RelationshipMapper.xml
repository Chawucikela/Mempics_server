<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.seckill.dao.RelationshipMapper">
  <resultMap id="BaseResultMap" type="com.nowcoder.seckill.entity.Relationship">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 02 00:41:53 CST 2021.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="following_user_id" jdbcType="INTEGER" property="followingUserId" />
    <result column="following_time" jdbcType="TIMESTAMP" property="followingTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 02 00:41:53 CST 2021.
    -->
    delete from relationship
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.nowcoder.seckill.entity.Relationship">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 02 00:41:53 CST 2021.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into relationship (user_id, following_user_id, following_time
      )
    values (#{userId,jdbcType=INTEGER}, #{followingUserId,jdbcType=INTEGER}, #{followingTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.nowcoder.seckill.entity.Relationship">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 02 00:41:53 CST 2021.
    -->
    update relationship
    set user_id = #{userId,jdbcType=INTEGER},
      following_user_id = #{followingUserId,jdbcType=INTEGER},
      following_time = #{followingTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 02 00:41:53 CST 2021.
    -->
    select id, user_id, following_user_id, following_time
    from relationship
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jul 02 00:41:53 CST 2021.
    -->
    select id, user_id, following_user_id, following_time
    from relationship
  </select>

  <!-- ============================================================================ -->
  <resultMap id="UserSimplifiedMap" type="com.nowcoder.seckill.entity.resultentity.UserSimplifiedResult">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
  </resultMap>

  <select id="selectByUserIds" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, user_id, following_user_id, following_time
    from relationship
    where user_id = #{userId,jdbcType=INTEGER}
    and following_user_id = #{followingUserId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByUserIds" parameterType="java.lang.Integer">
    delete from relationship
    where user_id = #{userId,jdbcType=INTEGER}
    and following_user_id = #{followingUserId,jdbcType=INTEGER}
  </delete>

  <select id="selectFollowingUser" parameterType="java.lang.Integer" resultMap="UserSimplifiedMap">
    select U.id, U.nickname, U.username, U.gender
    from relationship R inner join user_info U on R.following_user_id = U.id
    where user_id = #{userId,jdbcType=INTEGER}
    order by R.following_time DESC;
  </select>

  <select id="selectFollowerUser" parameterType="java.lang.Integer" resultMap="UserSimplifiedMap">
    select U.id, U.nickname, U.username, U.gender
    from relationship R inner join user_info U on R.user_id = U.id
    where following_user_id = #{followingUserId,jdbcType=INTEGER}
    order by R.following_time DESC;
  </select>
</mapper>